{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/linwish/Code/MyCode/movie-info/components/NewMovies.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\n\nvar NewMovies = function NewMovies(props) {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      movies = _React$useState2[0],\n      setMovies = _React$useState2[1];\n\n  React.useEffect(function () {\n    var key = \"d5ec0a5c314e36218436d747448d15fc\"; // Get a date range between today and one month ago to dynamically update the link for the request\n\n    var todayDate = new Date();\n    var today = todayDate.getFullYear() + \"-\" + (todayDate.getMonth() + 1) + \"-\" + todayDate.getDate();\n    var oneMonthAgo = (todayDate.getMonth() === 0 ? todayDate.getFullYear() - 1 : todayDate.getFullYear()) + \"-\" + (todayDate.getMonth() === 0 ? todayDate.getMonth() + 12 : todayDate.getMonth()) + \"-\" + todayDate.getDate();\n    fetch(\"https://api.themoviedb.org/3/discover/movie?api_key=\".concat(key, \"&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&primary_release_date.gte=\").concat(oneMonthAgo, \"&primary_release_date.lte=\").concat(today)).then(function (response) {\n      if (response.status !== 200) {\n        console.log(\"Error: \" + response.status);\n        return;\n      }\n\n      response.json().then(function (data) {\n        var movies = data.results;\n        setMovies(movies);\n      });\n    })[\"catch\"](function (err) {\n      console.log(\"Fetch Error :-S\", err);\n    });\n  });\n  return __jsx(\"section\", {\n    className: \"jsx-4049745534\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: \"jsx-4049745534\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"What's new?\"), __jsx(\"div\", {\n    className: \"jsx-4049745534\" + \" \" + \"newMovies\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, movies.map(function (movie, index) {\n    return __jsx(Link, {\n      href: \"/movie?id=\".concat(movies[index].id),\n      key: index,\n      className: \"movieLink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: movies[index].poster_path === null ? \"http://via.placeholder.com/300x450\" : \"https://image.tmdb.org/t/p/w300/\".concat(movies[index].poster_path),\n      alt: \"\".concat(movies.title, \" poster\"),\n      className: \"jsx-4049745534\" + \" \" + \"imgResponsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"jsx-4049745534\" + \" \" + \"movieInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      className: \"jsx-4049745534\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, movies[index].title), __jsx(\"p\", {\n      className: \"jsx-4049745534\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, movies[index].release_date)));\n  })), __jsx(_JSXStyle, {\n    id: \"4049745534\",\n    __self: this\n  }, \".newMovies.jsx-4049745534{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;width:100%;}.newMovies.jsx-4049745534 a.jsx-4049745534{width:100%;display:block;margin-bottom:30px;}@media (min-width:576px){.newMovies.jsx-4049745534{-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}.newMovies.jsx-4049745534 a.jsx-4049745534{width:48%;}}@media (min-width:768px){.newMovies.jsx-4049745534 a.jsx-4049745534{width:31.5%;}}@media (min-width:992px){.newMovies.jsx-4049745534 a.jsx-4049745534{width:23%;}}.movieLink.jsx-4049745534{position:relative;}.movieInfo.jsx-4049745534{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:absolute;top:0;text-align:center;padding:0 10px;width:100%;height:100%;background-color:#263238;color:#1de9b6;opacity:0;visibility:hidden;}.movieLink.jsx-4049745534:hover .movieInfo.jsx-4049745534{opacity:1;visibility:visible;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9saW53aXNoL0NvZGUvTXlDb2RlL21vdmllLWluZm8vY29tcG9uZW50cy9OZXdNb3ZpZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEVrQixBQUd3QixBQU9GLEFBT3FCLEFBR3BCLEFBTUUsQUFNRixBQUtNLEFBSUwsQUFpQkgsVUFyQ1YsQUFZQSxBQTBCbUIsQ0FoREwsQ0FnQmQsTUFXRixPQTFCcUIsSUFnRHJCLGVBL0NBLDhCQVRxQixBQXNDRyx5Q0F4QnRCLDRCQWJlLFNBc0NRLGdEQXJDWixXQUNiLHdDQXFDcUIsNkZBQ0Qsa0JBQ1osTUFDWSxrQkFDSCxlQUNKLFdBQ0MsWUFDYSx5QkFDWCxjQUNKLFVBQ1Esa0JBQ3BCIiwiZmlsZSI6Ii9Vc2Vycy9saW53aXNoL0NvZGUvTXlDb2RlL21vdmllLWluZm8vY29tcG9uZW50cy9OZXdNb3ZpZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XG5cbmNvbnN0IE5ld01vdmllcyA9IHByb3BzID0+IHtcbiAgY29uc3QgW21vdmllcywgc2V0TW92aWVzXSA9IFJlYWN0LnVzZVN0YXRlKFtdKTtcblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGtleSA9IFwiZDVlYzBhNWMzMTRlMzYyMTg0MzZkNzQ3NDQ4ZDE1ZmNcIjtcblxuICAgIC8vIEdldCBhIGRhdGUgcmFuZ2UgYmV0d2VlbiB0b2RheSBhbmQgb25lIG1vbnRoIGFnbyB0byBkeW5hbWljYWxseSB1cGRhdGUgdGhlIGxpbmsgZm9yIHRoZSByZXF1ZXN0XG4gICAgbGV0IHRvZGF5RGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgbGV0IHRvZGF5ID1cbiAgICAgIHRvZGF5RGF0ZS5nZXRGdWxsWWVhcigpICtcbiAgICAgIFwiLVwiICtcbiAgICAgICh0b2RheURhdGUuZ2V0TW9udGgoKSArIDEpICtcbiAgICAgIFwiLVwiICtcbiAgICAgIHRvZGF5RGF0ZS5nZXREYXRlKCk7XG4gICAgbGV0IG9uZU1vbnRoQWdvID1cbiAgICAgICh0b2RheURhdGUuZ2V0TW9udGgoKSA9PT0gMFxuICAgICAgICA/IHRvZGF5RGF0ZS5nZXRGdWxsWWVhcigpIC0gMVxuICAgICAgICA6IHRvZGF5RGF0ZS5nZXRGdWxsWWVhcigpKSArXG4gICAgICBcIi1cIiArXG4gICAgICAodG9kYXlEYXRlLmdldE1vbnRoKCkgPT09IDBcbiAgICAgICAgPyB0b2RheURhdGUuZ2V0TW9udGgoKSArIDEyXG4gICAgICAgIDogdG9kYXlEYXRlLmdldE1vbnRoKCkpICtcbiAgICAgIFwiLVwiICtcbiAgICAgIHRvZGF5RGF0ZS5nZXREYXRlKCk7XG5cbiAgICBmZXRjaChcbiAgICAgIGBodHRwczovL2FwaS50aGVtb3ZpZWRiLm9yZy8zL2Rpc2NvdmVyL21vdmllP2FwaV9rZXk9JHtrZXl9Jmxhbmd1YWdlPWVuLVVTJnNvcnRfYnk9cG9wdWxhcml0eS5kZXNjJmluY2x1ZGVfYWR1bHQ9ZmFsc2UmaW5jbHVkZV92aWRlbz1mYWxzZSZwYWdlPTEmcHJpbWFyeV9yZWxlYXNlX2RhdGUuZ3RlPSR7b25lTW9udGhBZ299JnByaW1hcnlfcmVsZWFzZV9kYXRlLmx0ZT0ke3RvZGF5fWBcbiAgICApXG4gICAgICAudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgIT09IDIwMCkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwiRXJyb3I6IFwiICsgcmVzcG9uc2Uuc3RhdHVzKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICByZXNwb25zZS5qc29uKCkudGhlbihkYXRhID0+IHtcbiAgICAgICAgICBjb25zdCBtb3ZpZXMgPSBkYXRhLnJlc3VsdHM7XG4gICAgICAgICAgc2V0TW92aWVzKG1vdmllcyk7XG4gICAgICAgIH0pO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkZldGNoIEVycm9yIDotU1wiLCBlcnIpO1xuICAgICAgfSk7XG4gIH0pO1xuXG4gIHJldHVybiAoXG4gICAgPHNlY3Rpb24+XG4gICAgICA8aDI+V2hhdCdzIG5ldz88L2gyPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJuZXdNb3ZpZXNcIj5cbiAgICAgICAge21vdmllcy5tYXAoKG1vdmllLCBpbmRleCkgPT4ge1xuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8TGlua1xuICAgICAgICAgICAgICBocmVmPXtgL21vdmllP2lkPSR7bW92aWVzW2luZGV4XS5pZH1gfVxuICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJtb3ZpZUxpbmtcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8aW1nXG4gICAgICAgICAgICAgICAgc3JjPXtcbiAgICAgICAgICAgICAgICAgIG1vdmllc1tpbmRleF0ucG9zdGVyX3BhdGggPT09IG51bGxcbiAgICAgICAgICAgICAgICAgICAgPyBcImh0dHA6Ly92aWEucGxhY2Vob2xkZXIuY29tLzMwMHg0NTBcIlxuICAgICAgICAgICAgICAgICAgICA6IGBodHRwczovL2ltYWdlLnRtZGIub3JnL3QvcC93MzAwLyR7bW92aWVzW2luZGV4XS5wb3N0ZXJfcGF0aH1gXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGFsdD17YCR7bW92aWVzLnRpdGxlfSBwb3N0ZXJgfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImltZ1Jlc3BvbnNpdmVcIlxuICAgICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW92aWVJbmZvXCI+XG4gICAgICAgICAgICAgICAgPGgzPnttb3ZpZXNbaW5kZXhdLnRpdGxlfTwvaDM+XG4gICAgICAgICAgICAgICAgPHA+e21vdmllc1tpbmRleF0ucmVsZWFzZV9kYXRlfTwvcD5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgKTtcbiAgICAgICAgfSl9XG4gICAgICA8L2Rpdj5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLm5ld01vdmllcyB7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5uZXdNb3ZpZXMgYSB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgICAgICAgfVxuXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAgICAgICAgIC5uZXdNb3ZpZXMge1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICAgIH1cbiAgICAgICAgICAubmV3TW92aWVzIGEge1xuICAgICAgICAgICAgd2lkdGg6IDQ4JTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgICAubmV3TW92aWVzIGEge1xuICAgICAgICAgICAgd2lkdGg6IDMxLjUlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgICAgICAgIC5uZXdNb3ZpZXMgYSB7XG4gICAgICAgICAgICB3aWR0aDogMjMlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC5tb3ZpZUxpbmsge1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5tb3ZpZUluZm8ge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIHBhZGRpbmc6IDAgMTBweDtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzI2MzIzODtcbiAgICAgICAgICBjb2xvcjogIzFkZTliNjtcbiAgICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5tb3ZpZUxpbms6aG92ZXIgLm1vdmllSW5mbyB7XG4gICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9zZWN0aW9uPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTmV3TW92aWVzO1xuIl19 */\\n/*@ sourceURL=/Users/linwish/Code/MyCode/movie-info/components/NewMovies.js */\"));\n};\n\nexport default NewMovies;","map":{"version":3,"sources":["/Users/linwish/Code/MyCode/movie-info/components/NewMovies.js"],"names":["React","Link","NewMovies","props","useState","movies","setMovies","useEffect","key","todayDate","Date","today","getFullYear","getMonth","getDate","oneMonthAgo","fetch","then","response","status","console","log","json","data","results","err","map","movie","index","id","poster_path","title","release_date"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Link from \"next/link\";\n\nconst NewMovies = props => {\n  const [movies, setMovies] = React.useState([]);\n\n  React.useEffect(() => {\n    const key = \"d5ec0a5c314e36218436d747448d15fc\";\n\n    // Get a date range between today and one month ago to dynamically update the link for the request\n    let todayDate = new Date();\n    let today =\n      todayDate.getFullYear() +\n      \"-\" +\n      (todayDate.getMonth() + 1) +\n      \"-\" +\n      todayDate.getDate();\n    let oneMonthAgo =\n      (todayDate.getMonth() === 0\n        ? todayDate.getFullYear() - 1\n        : todayDate.getFullYear()) +\n      \"-\" +\n      (todayDate.getMonth() === 0\n        ? todayDate.getMonth() + 12\n        : todayDate.getMonth()) +\n      \"-\" +\n      todayDate.getDate();\n\n    fetch(\n      `https://api.themoviedb.org/3/discover/movie?api_key=${key}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&primary_release_date.gte=${oneMonthAgo}&primary_release_date.lte=${today}`\n    )\n      .then(response => {\n        if (response.status !== 200) {\n          console.log(\"Error: \" + response.status);\n          return;\n        }\n\n        response.json().then(data => {\n          const movies = data.results;\n          setMovies(movies);\n        });\n      })\n      .catch(err => {\n        console.log(\"Fetch Error :-S\", err);\n      });\n  });\n\n  return (\n    <section>\n      <h2>What's new?</h2>\n      <div className=\"newMovies\">\n        {movies.map((movie, index) => {\n          return (\n            <Link\n              href={`/movie?id=${movies[index].id}`}\n              key={index}\n              className=\"movieLink\"\n            >\n              <img\n                src={\n                  movies[index].poster_path === null\n                    ? \"http://via.placeholder.com/300x450\"\n                    : `https://image.tmdb.org/t/p/w300/${movies[index].poster_path}`\n                }\n                alt={`${movies.title} poster`}\n                className=\"imgResponsive\"\n              />\n\n              <div className=\"movieInfo\">\n                <h3>{movies[index].title}</h3>\n                <p>{movies[index].release_date}</p>\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n      <style jsx>{`\n        .newMovies {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n          width: 100%;\n        }\n\n        .newMovies a {\n          width: 100%;\n          display: block;\n          margin-bottom: 30px;\n        }\n\n        @media (min-width: 576px) {\n          .newMovies {\n            justify-content: space-between;\n          }\n          .newMovies a {\n            width: 48%;\n          }\n        }\n\n        @media (min-width: 768px) {\n          .newMovies a {\n            width: 31.5%;\n          }\n        }\n\n        @media (min-width: 992px) {\n          .newMovies a {\n            width: 23%;\n          }\n        }\n\n        .movieLink {\n          position: relative;\n        }\n\n        .movieInfo {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n          position: absolute;\n          top: 0;\n          text-align: center;\n          padding: 0 10px;\n          width: 100%;\n          height: 100%;\n          background-color: #263238;\n          color: #1de9b6;\n          opacity: 0;\n          visibility: hidden;\n        }\n\n        .movieLink:hover .movieInfo {\n          opacity: 1;\n          visibility: visible;\n        }\n      `}</style>\n    </section>\n  );\n};\n\nexport default NewMovies;\n"]},"metadata":{},"sourceType":"module"}